name: Docker Build and Publish

on:
  push:
    tags:
      - 'v*'
    branches:
      - main
    paths-ignore:
      - '.editorconfig'
      - '.gitignore'
      - '.github/workflows/debian.yml'
      - 'scripts/**'
      - 'debian/**'
  pull_request:
    branches:
      - main
    paths-ignore:
      - '.editorconfig'
      - '.gitignore'
      - '.github/workflows/debian.yml'
      - 'scripts/**'
      - 'debian/**'
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: dawidd6/action-download-artifact@v3
        with:
          workflow: build.yml
          name: linux-x86_64
          path: artifacts

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest,enable=${{ github.ref_name == github.event.repository.default_branch }}
            type=semver,pattern={{version}}
            type=sha,prefix=sha-
            type=raw,value=pr-${{ github.event.pull_request.number }},enable=${{ github.event_name == 'pull_request' }}
            type=raw,value=pr-${{ github.event.pull_request.number }}-${{ github.sha }},enable=${{ github.event_name == 'pull_request' }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            BINARY_PATH=artifacts/snapshot-gossip-client
