name: Docker Build and Publish

on:
  workflow_call:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-output-linux-x86_64
          path: artifacts

      - name: Extract binary from tarball
        working-directory: artifacts
        run: |
          # Use fixed tarball name
          TARBALL="${{ github.event.repository.name }}-linux-x86_64.tar.gz"
          echo "Extracting from tarball: ${TARBALL}"
          # Extract binary, stripping the top-level dir (e.g., agave-snapshot-gossip-client/)
          # Resulting path is bin/snapshot-gossip-client
          tar xzf "${TARBALL}" --strip-components=1 "${{ github.event.repository.name }}/bin/snapshot-gossip-client"
          # Verify extraction
          ls -l bin/snapshot-gossip-client

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest,enable=${{ github.ref_name == github.event.repository.default_branch }}
            type=semver,pattern={{version}}
            type=sha,prefix=sha-

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            BINARY_PATH=artifacts/bin/snapshot-gossip-client
